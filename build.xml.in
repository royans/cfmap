<project name="cfmap" basedir="." default="package">

    <tstamp>
	<format property="DATE" pattern="yyyyMMdd-HHmmss" locale="en,UK"/>
    </tstamp>

    <!-- project-specific variables -->
    <property name="jsp.dir.name" value="cfmap" />
    <property name="package.name" value="${jsp.dir.name}.war" />
    <property name="webapp.dir" value="webapps_dir" />

    <property environment="env" />
    <property name="build.dir" value="build" />
    <property file="${build.dir}/build.${env.HOSTNAME}" />

    <property name="lib.dir" value="lib" />
    <property name="conf.dir" value="conf" />
    <property name="bin.dir" value="bin" />
    <property name="binaries.dir" value="binaries" />
    <property name="contrib_cassandra.dir" value="contrib/cassandra" />
    <property name="pages.dir" value="web" />
    <property name="src.dir" value="src" />
    <property name="src.tests.dir" value="src-tests" />
    <property name="resources.dir" value="resources" />
    <property name="dest.dir" value="@prefix@/@appname@" />

    <exec executable="./additionalbuild.sh" />

    <!-- put everything in a temp folder with the right structure during the build -->
    <property name="temp.dir" value="tmp" />
    <property name="temp.dir.web-inf" value="${temp.dir}/WEB-INF" />
    <property name="temp.dir.lib" value="${temp.dir.web-inf}/lib" />
    <property name="temp.dir.classes" value="${temp.dir.web-inf}/classes" />
    <property name="temp.dir.meta-inf" value="${temp.dir}/META-INF" />

    <property name="package.file" value="${dest.dir}/lib/${package.name}" />

    <path id="build.class.path">
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <target name="clean">
        <delete >
            <fileset dir="${dest.dir}" includes="**/*"/>
        </delete>
        <delete dir="${temp.dir}"  />
        <delete dir="${temp.dir.classes}"  />
        <delete dir="${temp.dir.meta-inf}" />
        <delete dir="${temp.dir.web-inf}"  />
    </target>

    <target name="prepare" >
        <mkdir dir="${dest.dir}" />
        <mkdir dir="${dest.dir}/bin" />
        <mkdir dir="${dest.dir}/lib" />
        <mkdir dir="${dest.dir}/conf" />
        <mkdir dir="${dest.dir}/conf/cassandra" />
        <mkdir dir="${temp.dir}" />
        <mkdir dir="${temp.dir.lib}" />
        <mkdir dir="${temp.dir.meta-inf}" />
        <mkdir dir="${temp.dir.web-inf}" />
        <mkdir dir="${temp.dir.classes}" />
    </target>

    <!-- COMPILE -->
    <target name="compile" depends="prepare">
        <echo>=== COMPILE ===</echo>
        <echo>Compiling ${src.dir} files ...</echo>
        <javac debug="on" srcdir="${src.dir}" destdir="${temp.dir.classes}" includes="**/*">
            <classpath refid="build.class.path" />
        </javac>
    </target>

    <!-- PACKAGE -->
    <target name="package" depends="compile">
      <echo>=== PACKAGE ===</echo>
     
      <!-- copy the config files -->
      <copy file="${resources.dir}/MANIFEST.MF" tofile="${temp.dir.meta-inf}/MANIFEST.MF" overwrite="true" />
      <copy file="${resources.dir}/web.xml" tofile="${temp.dir.web-inf}/web.xml" overwrite="true" />
      <copy file="${conf.dir}/cfmap.properties" tofile="${temp.dir.classes}/cfmap.properties" overwrite="true" />
      <copy file="${conf.dir}/cfmap.properties" tofile="${dest.dir}/conf/cfmap.properties" overwrite="true" />

      <copy todir="${temp.dir.classes}">
        <fileset dir="${src.dir}">
          <include name="**/*.xml"/>
          <include name="**/*.xsl"/>
        </fileset>
      </copy>

      <copy todir="${dest.dir}/conf/">
        <fileset dir="${conf.dir}">
          <include name="**/*.*"/>
        </fileset>
      </copy>

      <copy todir="${dest.dir}/bin/">
        <fileset dir="${bin.dir}">
<<<<<<< HEAD:build/build.xml
          <include name="**/start*"/>
          <include name="**/shutdown*"/>
          <include name="**/env*"/>
          <include name="**/cfq*"/>
=======
          <include name="**/startup.sh"/>
          <include name="**/cfquery.pl"/>
          <include name="**/env.sh"/>
          <include name="**/shutdown.sh"/>
>>>>>>> 0750978f1fc8aee3156b37e9b318dd785c912a8d:build.xml.in
        </fileset>
      </copy>

      <chmod file="${dest.dir}/bin/*.sh" perm="ugo+rx"/>

      <copy todir="${dest.dir}">
        <fileset dir="${bin.dir}/..">
          <include name="**/README*"/>
          <include name="**/LIC*"/>
        </fileset>
      </copy>

      <copy todir="${dest.dir}/conf/cassandra/">
        <fileset dir="${contrib_cassandra.dir}">
          <include name="**/storage-conf.xml"/>
          <include name="**/log4j.properties"/>
        </fileset>
      </copy>

      <!--

      <copydir dest="${dest.dir}/cassandra" src="${binaries.dir}/cassandra" />
      <chmod file="${dest.dir}/cassandra/bin/*" perm="ugo+x" />

      <copy todir="${dest.dir}/lib">
        <fileset dir="${binaries.dir}/lib/">
          <include name="**/*.jar"/>
        </fileset>
      </copy>

      <copy todir="${dest.dir}">
        <fileset dir="${binaries.dir}">
          <include name="README.txt"/>
          <include name="LICENSE.txt"/>
        </fileset>
      </copy>

      -->
      <!-- the ant war task. with all resources in place, create the war file -->
      <war destfile="${package.file}" webxml="${temp.dir.web-inf}/web.xml" basedir="${temp.dir}">
        <fileset dir="${pages.dir}"/>
        <lib dir="${lib.dir}" />
        <classes dir="${temp.dir.classes}" />
      </war>

    </target>


</project>
